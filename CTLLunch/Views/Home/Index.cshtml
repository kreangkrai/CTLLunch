@model CTLLunch.Models.EmployeeModel;
@{
    ViewData["Title"] = "Home";
    List<EmployeeModel> employees = ViewBag.employees;
}

<link rel="preconnect" href="https://fonts.gstatic.com">
<link href="https://fonts.googleapis.com/css2?family=Mitr:wght@300&display=swap" rel="stylesheet">

<style type="text/css">
    body {
        font-family: 'Mitr', sans-serif;
    }
</style>

<style>
    .active {
        background-color: #6cbd93 !important;
        color: white !important
    }

    .vertical-line {
        border-right: 1px solid gray;
    }

</style>
<div class="container">
    <div class="row p-1" style="row-gap:1px">
        <div class="col-xl-12">
            <div class="card card-dark">
                <div class="card-header" style="background-color: #034694">
                    <span class="card-title">เติมเงิน</span>
                </div>
                <div class="card-body" style="overflow-x:auto">
                    <div class="row">
                        <div class="col-6 col-md-2 col-xl-2">
                            <label style="font-size:18px">แผนก : </label>
                        </div>
                        <div class="col-6 col-md-4 col-xl-4">
                            <select id="select_department" class="form-control">
                                <option value="" selected disabled>Please Select</option>
                                @{
                                    List<string> departments = employees.GroupBy(g => g.department).Select(s => s.FirstOrDefault().department).ToList();
                                    for(int i = 0; i < departments.Count; i++)
                                    {
                                                                <option value="@departments[i]">@departments[i]</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>
                    <div class="row pt-2">
                        <div class="col-6 col-md-2 col-xl-2">
                            <label style="font-size:18px">ชื่อ : </label>
                        </div>
                        <div class="col-6 col-md-4 col-xl-4">
                            <select id="select_employee" class="form-control">

                            </select>
                        </div>
                    </div>
                    <div class="row pt-2">
                        <div class="col-6 col-md-2 col-xl-2">
                            <label style="font-size:18px">ยอดเงินคงเหลือ : </label>
                        </div>
                        <div class="col-6 col-md-4 col-xl-4">
                            <p style="font-size:20px" id="employee_balance">฿0</p>
                        </div>
                    </div>
                    <hr />
                    @{
                        if (Model.role == "Admin"){
                                <div class="row pt-2">
                                    <div class="col-6 col-md-2 col-xl-2">
                                        <label style="font-size:18px">จำนวนเงินที่เติม : </label>
                                    </div>
                                    <div class="col-6 col-md-3 col-xl-3">
                                        <p style="font-size:20px" id="employee_add_money">฿0</p>
                                    </div>
                                </div>
                                <div class="row pt-2">
                                    @{
                                List<int> moneys = new List<int>() { 100, 200, 300, 400, 500,1000 };
                                for (int i=0;i<moneys.Count;i++)
                                {
                                                                <div class="col-4 col-md-2 col-xl-2 p-1">
                                                                <button id="btn_add_money" class="form-control" style="width: 100px; height: 100px; font-size: 20px;font-weight:600;background-color:#F2F2F2;border-radius:5px;" onclick="AddMoney_Click(`@moneys[i]`)">฿@moneys[i]</button>
                                                                </div>
                                }                           
                                    }
                                </div>
                                <div class="form-row d-flex justify-content-center pt-3" style="row-gap:3px">
                                    <input type="button" id="btn_update_money" class="btn btn-success" value="เติมเงิน" style="border-radius:25px;width:200px;height:50px;font-size:20px" />
                                </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="row p-1" style="row-gap:1px">
        <div class="col-xl-12">
            <div class="card card-dark">
                <div class="card-header" style="background-color: #034694">
                    <span class="card-title">ประวัติการเติมเงิน</span>
                </div>
                <div class="card-body" style="overflow-x:auto">
                    <table id="table_add_money" class="table table-sm table-hover text-center w-100">
                        <thead style="background-color: #F2F2F2;color:black;border-color:greenyellow;border-width:2px;border:solid">
                            <tr>
                                <th>ลำดับ</th>
                                <th>วันที่</th>
                                <th>ผู้เติมเงิน</th>
                                <th>ผู้รับเงิน</th>
                                <th>จำนวนเงิน</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modal_confirm_add_money" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog modal-dialog-centered modal-md" role="document">
        <div class="modal-content">
            <div class="modal-body">
                <form>
                    <p style="font-size:20px">คุณต้องการทำรายการนี้หรือไม่ ?</p>
                </form>
            </div>
            <div class="modal-footer">
                <input type="button" class="btn btn-secondary" data-dismiss="modal" value="ยกเลิก" />
                <input id="btn_confirm_add_money" type="button" class="btn btn-success" value="ทำรายการ" />
            </div>
        </div>
    </div>
</div>
@section Scripts
{
    <script type="text/javascript">
        var table_add_money;
        let employee_amount = 0;
        $(document).ready(async function () {
            
        });

        $('button').click(function () {
            $('button').removeClass("active");
            $(this).addClass("active");
        });

        $('#select_department').on('change', function () {
            let department = $('#select_department').val();
            SelectDepartment(department);
        });

        $('#select_employee').on('change', async function () {
            let employee_id = $('#select_employee').val();
            let employees = JSON.parse('@Html.Raw(Json.Serialize(employees))');
            let emps = employees.filter(f => f.employee_id === employee_id).map(m => m)[0];
            $('#employee_balance').text("฿"+emps.balance);

            await $.ajax({
                type: "GET",
                url: '@Url.Action("GetTransaction", "Home")',
                contentType: 'application/x-www-form-urlencoded',
                data: { employee_id },
                success: function (response) {
                    GenerateTableSummary(response);
                }
            });           
        });

        function SelectDepartment(department) {
            let employees = JSON.parse('@Html.Raw(Json.Serialize(employees))');
            let emps = employees.filter(f => f.department === department).map(m => m);
            var str = '<option value="" selected disabled>Please Select</option>';
            for (var i = 0; i < emps.length; i++) {
                str += `<option value=${emps[i].employee_id}>${emps[i].employee_name} (${emps[i].employee_nickname})</option>`;
            }
            $('#select_employee').empty();
            $('#select_employee').append(str);
        }

        function AddMoney_Click(amount) {
            employee_amount = amount;
            $('#employee_add_money').text("฿"+amount);
        };

        $('#btn_update_money').on('click', function () {
            $('#modal_confirm_add_money').modal();
        });

        $('#btn_confirm_add_money').on('click', async function () {
            let employee_id = $('#select_employee').val();
            let amount = employee_amount;
            if (employee_id !== null && employee_id !== "" && amount > 0) {
                await $.ajax({
                    type: "POST",
                    url: '@Url.Action("InsertBalance", "Home")',
                    contentType: 'application/x-www-form-urlencoded',
                    data: { employee_id, amount },
                    success: function (response) {
                        if (response === "Success") {
                            window.location.reload();
                        } else {
                            alert(response);
                        }
                    }
                });
            }else{
                alert('Error');
            }
        });

        function GenerateTableSummary(datas) {
            let _datas = [];
            for (let i = 0; i < datas.length; i++) {
                _datas.push([
                    (i + 1),
                    datas[i].date.split('T')[0] + " " + datas[i].date.split('T')[1],
                    datas[i].employee_name,
                    datas[i].receiver_name,
                    datas[i].amount
                ]);
            }

            if (table_add_money !== undefined) {
                table_add_money.destroy();
            }
            table_add_money = $('#table_add_money').DataTable({
                data: _datas,
                columnDefs: [
                    {
                        targets: 0,
                        className: "text-center"
                    },
                ],
                rowCallback: function (row, data) {
                    
                },
                searching: true,
                paging: false,
                info: false
            });
        }
    </script>
}