@model CTLLunch.Models.EmployeeModel;
@{
    ViewData["Title"] = "Home";
    List<ShopModel> shops = ViewBag.shops;
}

<link rel="preconnect" href="https://fonts.gstatic.com">
<link href="https://fonts.googleapis.com/css2?family=Mitr:wght@300&display=swap" rel="stylesheet">

<style type="text/css">
    body {
        font-family: 'Mitr', sans-serif;
    }
</style>

<style>
    .active {
        background-color: #6cbd93 !important;
        color: white !important
    }

    .vertical-line {
        border-right: 1px solid gray;
    }

    #table_reserve tbody tr {
        border: 1px solid black;
    }
</style>
<div class="container">
    <div class="row p-1" style="row-gap:1px">
        <div class="col-xl-12">
            <div class="card card-dark">
                <div class="card-header" style="background-color: #034694">
                    <span class="card-title">รายการที่สั่ง</span>
                </div>
                <div class="card-body" style="overflow-x:auto">
                    <table id="table_reserve" class="table table-sm table-hover text-center w-100">
                        <thead style="background-color: #F2F2F2;color:black;border-color:greenyellow;border-width:2px;border:solid">
                            <tr>
                                <th>หมายเลขสั่งซื้อ</th>
                                <th>เวลาที่สั่ง</th>
                                <th>ร้าน</th>
                                <th>รายการอาหาร</th>
                                <th>ค่าอาหาร</th>
                                <th>ค่าจัดส่ง</th>
                                <th>รวม</th>
                                <th>สถานะ</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="row p-1" style="row-gap:10px">
        <div class="col-xl-12">
            <div class="card card-dark">
                <div class="card-header" style="background-color: #034694">
                    <span class="card-title">ร้านค้า</span>
                </div>
                <div class="card-body" style="overflow-x:auto">
                    <div class="row">
                        @{
                            for (int i = 0; i < shops.Count; i++)
                            {
                                <div class="col-4 col-xl-2 col-md-3 pt-2">
                                    <button id="btn_shop" class="form-control" style="width: 100px; height: 100px; font-size: 20px;font-weight:600;background-color:#F2F2F2;border-radius:5px;" onclick="Shop_Click(`@shops[i].shop_id`)">@shops[i].shop_name</button>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row p-1" style="row-gap:1px">
        <div class="col-xl-12">
            <div class="card card-dark">
                <div class="card-header" style="background-color: #034694">
                    <span class="card-title">รายการอาหารทั้งหมดวันนี้</span>
                </div>
                <div class="card-body" style="overflow-x:auto">
                    <table id="table_reserve_all" class="table table-sm table-hover text-center w-100">
                        <thead style="background-color: #034694;color:white">
                            <tr>
                                <th>หมายเลขสั่งซื้อ</th>
                                <th>เวลาที่สั่ง</th>
                                <th>ชื่อผู้สั่ง</th>
                                <th>รายการอาหาร</th>
                                <th>ค่าอาหาร</th>
                                <th>ค่าจัดส่ง</th>
                                <th>รวม</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="row p-1" style="row-gap:10px">
        <div class="col-xl-12">
            <div class="card card-dark">
                <div class="card-header" style="background-color: #034694">
                    <span class="card-title">เมนูอาหาร</span>
                    <div class="card-tools">
                        <input id="search_menu" type="text" class="form-control" style="width:300px;border-radius:5px" placeholder="Search Menu" />
                    </div>
                </div>
                <div class="card-body">
                    <div id="div_menu"></div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="modal_extra" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog modal-dialog-centered modal-md" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 id="modal_reserve_menu" class="modal-title"><b></b></h5>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-row">
                        <div class="col-12 col-xl-12">
                            <div class="form-group row">
                                <label>หมายเหตุ</label>
                                <textarea type="text" id="note_menu" placeholder="เช่น เผ็ดน้อย" class="form-control"></textarea>
                            </div>
                            <div class="row">
                                <div class="col-9 col-xl-9">
                                    <input type="checkbox" id="extra_menu" style="width:20px;height:1em" />
                                    <label>พิเศษ</label>
                                </div>
                                <div class="col-3 col-xl-3 d-flex justify-content-end">
                                    <label>+฿10</label>
                                </div>
                            </div>

                        </div>
                    </div>
                    <hr />
                    <div class="form-row">
                        <div class="col-12 col-xl-12">
                            <div id="div_extra_menu"></div>
                            </div>
                            <div class="col-12 col-md-12 col-xl-12">
                                <div class="form-group row">
                                    <label>เพิ่มเติม</label>
                                    <textarea type="text" id="remark_menu" placeholder="เช่น ไข่ดาวไม่สุก" class="form-control"></textarea>
                                </div>
                            </div>

                        </div>
                    </form>
            </div>
            <div class="modal-footer">
                <input type="button" class="btn btn-secondary" data-dismiss="modal" value="ยกเลิก" />
                <input id="btn_reserve_save" type="button" class="btn btn-success" value="ยืนยันรายการ" />
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="modal_confirm_delete" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog modal-dialog-centered modal-md" role="document">
        <div class="modal-content">
            <div class="modal-body">
                <form>
                    <p style="font-size:20px">คุณต้องการลบรายการนี้หรือไม่ ?</p>
                    <div class="row">
                        <div class="col-12">
                            <p id="p_reserve" style="font-size:20px"></p>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12">
                            <p id="p_menu" style="font-size:20px"></p>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <input type="button" class="btn btn-secondary" data-dismiss="modal" value="ยกเลิก" />
                <input id="btn_reserve_delete" type="button" class="btn btn-danger" value="ลบรายการ" />
            </div>
        </div>
    </div>
</div>
@section Scripts
{
    <script type="text/javascript">
        let menus = [];
        var table_reserve;
        var table_reserve_all;
        let g_shop_id = "";
        let g_menu_id = "";
        let menus_addon = [];
        let g_group_menus = [];
        let g_extra_menu = [];
        $(document).ready(async function () {
            await GetDataReserveEmployee();
        });

        $('button').click(function () {
            $('button').removeClass("active");
            $(this).addClass("active");
        });

        async function GetDataReserveEmployee() {
            let employee_id = '@Html.Raw(Model.employee_id)';
            await $.ajax({
                type: "GET",
                url: '@Url.Action("GetDataReserveEmployee", "Home")',
	            contentType: 'application/x-www-form-urlencoded',
                data: { employee_id },
                success: function (response) {
                    let reserves = response.reserves_employee;
                    let menus = response.menus;
                    GenerateTableReserve(reserves,menus);
                }
            });
        }

        async function GetDataReserveShop(shop_id) {
            await $.ajax({
                type: "GET",
                url: '@Url.Action("GetDataReserveShop", "Home")',
	            contentType: 'application/x-www-form-urlencoded',
                data: { shop_id },
                success: function (response) {
                    let reserves = response.reserves_shop;
                    let menus = response.menus;
                    let group_menus = response.groups;
                    g_group_menus = group_menus;
                    GenerateTableReserveAll(reserves, menus);

                    let _group_menu = g_group_menus.filter(f => f.group_id !== "G99").map(m => m);
                    ShowMenu(_group_menu);
                }
            });
        }

        async function Shop_Click(shop_id) {
            await GetDataReserveShop(shop_id);
            await GetMenuByShop(shop_id);
            g_shop_id = shop_id;
        }

        async function GetMenuByShop(shop_id) {
            await $.ajax({
                type: "GET",
                url: '@Url.Action("GetMenuByShop", "Home")',
	            contentType: 'application/x-www-form-urlencoded',
                data: { shop_id },
                success: function (response) {
                    let menu = response;
                    menus = menu.menu;
                    GroupSelect(menu.group);
                }
            });
        };

        function GroupSelect(groups) {
            var str = '<option value="" selected disabled>Please Select Job</option>';
            for (var i = 0; i < groups.length; i++) {
                str += '<option value="' + groups[i].group_id + '">' + groups[i].group_id + ": " + groups[i].group_name + '</option>';
            }
            $('#select_group').empty();
            $('#select_group').append(str);
        }

        $('#select_group').on('change', function () {
            let group = $('#select_group').val();
            //ShowMenu(group, false);
        });

        function ShowMenu(group_menus) {
            let str = ``;
            for (let i = 0; i < group_menus.length; i++) {
                str += `<div class="card card-success collapsed-card">
                                <div class="card-header">
                                    <span><b>${group_menus[i].group_name}</b></span>
                                    <div class="card-tools">
                                        <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                            <i class="fas fa-plus"></i>
                                        </button>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <div class="row">
                                        <div class="container d-flex justify-content-center">
                                            <div class="col-12 col-xl-8">
                                            <div class="row">`;
                for (let j = 0; j < group_menus[i].menus.length; j++) {
                    str += `
                                                <div class="col-12 col-xl-6">
                                                        <div class="row">
                                                            <div class="col-9 col-xl-9">
                                                                <input type="radio" name="menu" style="width:20px;height:1em" onclick="SelectMenu('${group_menus[i].menus[j].menu_id}','${group_menus[i].menus[j].menu_name}')" />
                                                                <label>${group_menus[i].menus[j].menu_name}</label>
                                                            </div>
                                                            <div class="col-3 col-xl-3 d-flex justify-content-center">
                                                                <label>฿${group_menus[i].menus[j].price}</label>
                                                            </div>
                                                        </div>
                                                    </div>
                                                `;
                }
                str += `
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>`;
            }

            $('#div_menu').empty();
            $('#div_menu').append(str);
        }
        function ShowExtraMenu(extra_menus) {
            let str = `<div class="row">`;
            for (let i = 0; i < extra_menus[0].menus.length; i++) {                
                str += ` <div class="col-12 col-md-6 col-xl-6">
                            <div class="row">
                                <div class="col-9 col-xl-9">
                                    <input type="checkbox" name="extra_menu" style="width:20px;height:1em" onclick="Select_ExtraMenu(this,'${extra_menus[0].menus[i].menu_id}')" />
                                    <label>${extra_menus[0].menus[i].menu_name}</label>
                                </div>
                                <div class="col-3 col-xl-3 d-flex justify-content-end">
                                    <label>+฿${extra_menus[0].menus[i].price}</label>
                                </div>
                            </div>
                    </div>`;
            }
            str += `</div>`
            $('#div_extra_menu').empty();
            $('#div_extra_menu').append(str);
        }
        function Select_ExtraMenu(checkbox, menu_id) {
            let checked = checkbox.checked;
            if (checked) {
                g_extra_menu.push(menu_id);
            } else {
                g_extra_menu = g_extra_menu.filter(f => f !== menu_id);
            }
        }

        function GenerateTableReserve(reserves,menus) {
            let datas = [];
            for (let i = 0; i < reserves.length; i++) {
                let extra_price = 0;
                let note_remark = [];
                if (reserves[i].note.trim() !== "") {
                    note_remark.push(reserves[i].note.trim());
                }
                if (reserves[i].remark.trim() !== "") {
                    note_remark.push(reserves[i].remark.trim());
                }
                let _not_remark = note_remark.join(',');
                if (_not_remark.trim() !== "" && _not_remark.trim() !== ",") {
                    _not_remark = " (" + _not_remark + ")";
                } else {
                    _not_remark = "";
                }
               
                if (reserves[i].extra === true) {
                    extra_price = menus.filter(f => f.menu_id === reserves[i].menu_id).map(m => m.extra_price)[0];
                }
                let status = "";
                if (reserves[i].status === "Pending"){
                    status = "รอชำระเงิน"
                }
                if (reserves[i].status === "Approve") {
                    status = "ชำระเงินแล้ว"
                }
                datas.push([reserves[i].reserve_id,
                    reserves[i].reserve_date.split('T')[0] + " " + reserves[i].reserve_date.split('T')[1],
                    reserves[i].shop_name,
                    reserves[i].menu_name + _not_remark,
                    reserves[i].price + extra_price,
                    parseFloat(reserves[i].delivery_service_per_person).toFixed(2),
                    parseFloat(reserves[i].sum_price + extra_price).toFixed(2),
                    status,
                    ""
                ]);
            }

            if (table_reserve !== undefined) {
                table_reserve.destroy();
            }

            table_reserve = $('#table_reserve').DataTable({
                data: datas,
                columnDefs: [
                    {
                        targets: 0,
                        width: "5%"
                    },
                    {
                        targets: 5,
                        width: "10%",
                        className: "text-center"
                    },
                ],
                rowCallback: function (row, data) {
                    let reserve_no = data[0];
                    let menu = data[3];
                     $('td:eq(8)', row).html(`
                            <button class="btn btn-danger" style="width:80px" onclick="DeleteReserve('${reserve_no}','${menu}')">ลบ
                            </button>
                     `);
                },
                searching: false,
                paging: false,
                info: false
            });
        }

        function SelectMenu(menu_id, menu_name) {

            g_extra_menu = [];

            $('#modal_reserve_menu').text(menu_name);
            $('#modal_reserve_menu').css('font-weight', "bold");
            g_menu_id = menu_id;
            let extra_menu = g_group_menus.filter(f => f.group_id === "G99").map(m => m);
            ShowExtraMenu(extra_menu);
            $('#modal_extra').modal();
        }

        function GenerateTableReserveAll(reserves,menus) {
            let datas = [];
            for (let i = 0; i < reserves.length; i++) {
                let extra_price = 0;
                let note_remark = [];
                if (reserves[i].note.trim() !== "") {
                    note_remark.push(reserves[i].note.trim());
                }
                if (reserves[i].remark.trim() !== "") {
                    note_remark.push(reserves[i].remark.trim());
                }
                let _not_remark = note_remark.join(',');
                if (_not_remark.trim() !== "" && _not_remark.trim() !== ",") {
                    _not_remark = " (" + _not_remark + ")";
                } else {
                    _not_remark = "";
                }

                if (reserves[i].extra === true) {
                    extra_price = menus.filter(f => f.menu_id === reserves[i].menu_id).map(m => m.extra_price)[0];
                }

                datas.push([reserves[i].reserve_id,
                reserves[i].reserve_date.split('T')[0] + " " + reserves[i].reserve_date.split('T')[1],
                reserves[i].employee_nickname,
                reserves[i].menu_name + _not_remark,
                reserves[i].price + extra_price,
                parseFloat(reserves[i].delivery_service_per_person).toFixed(2),
                parseFloat(reserves[i].sum_price + extra_price).toFixed(2),
                ]);
            }

            if (table_reserve_all !== undefined) {
                table_reserve_all.destroy();
            }

            table_reserve_all = $('#table_reserve_all').DataTable({
                data: datas,
                columnDefs: [
                    {
                        targets: 0,
                        width: "5%"
                    },
                    {
                        targets: 5,
                        width: "10%",
                        className: "text-center"
                    },
                ],
                rowCallback: function (row, data) {
                    
                },
                searching: false,
                paging: false,
                info: false
            });
        }

        function DeleteReserve(reserve_no,menu) {
            $('#p_reserve').text(reserve_no);
            $('#p_menu').text( menu);
            $('#modal_confirm_delete').modal();
        }

        $('#btn_reserve_delete').on('click', async function () {
            let reserve_id = $('#p_reserve').text();
            await $.ajax({
                type: "DELETE",
                url: '@Url.Action("UpdateReserveStatus", "Home")',
	            contentType: 'application/x-www-form-urlencoded',
                data: { reserve_id },
                success: function (response) {
                    if (response === "Success") {
                        window.location.reload();
                    } else {
                        alert(response);
                    }
                }
            });
        });

        $('#search_menu').on('keyup', async function () {
            let menu = $('#search_menu').val();
            let shop_id = g_shop_id;
            await $.ajax({
                type: "GET",
                url: '@Url.Action("SearchMenuByShop", "Home")',
	            contentType: 'application/x-www-form-urlencoded',
                data: { shop_id,menu },
                success: function (response) {
                    let group_menus = response.groups;
                    let _group_menus = group_menus.filter(f => f.group_id !== "G99").map(m => m);
                    ShowMenu(_group_menus);
                }
            });
        });

        $('#btn_reserve_save').on('click', async function () {
            let employee_id = '@Html.Raw(Model.employee_id)';
            let shop_id = g_shop_id;
            let menu_id = g_menu_id;
            let extra = document.getElementById("extra_menu").checked;
            let note = $('#note_menu').val();
            let remark = $('#remark_menu').val();
            let strs = [];
            var str = JSON.stringify({
                "menu_id": menu_id,
                "shop_id": shop_id,
                "employee_id": employee_id,
                "note": note,
                "remark": '',
                "extra": extra
            });
            strs.push(str);
            let b_remark = false;
            for (let i = 0; i < g_extra_menu.length; i++) {
                var _str;
                if (!b_remark) {
                    _str = JSON.stringify({
                        "menu_id": g_extra_menu[i],
                        "shop_id": shop_id,
                        "employee_id": employee_id,
                        "note": '',
                        "remark": remark,
                        "extra": false
                    });
                    b_remark = true;
                } else {
                    _str = JSON.stringify({
                        "menu_id": g_extra_menu[i],
                        "shop_id": shop_id,
                        "employee_id": employee_id,
                        "note": '',
                        "remark": '',
                        "extra": false
                    });
                }
                strs.push(_str);
            }
            
            await $.ajax({
                type: "POST",
                url: '@Url.Action("InsertReserve", "Home")',
	            contentType: 'application/x-www-form-urlencoded',
                data: { strs },
                success: function (response) {
                    if (response === "Success") {
                        window.location.reload();
                    } else {
                        alert(response);
                    }
                }
            });
        });

    </script>
}