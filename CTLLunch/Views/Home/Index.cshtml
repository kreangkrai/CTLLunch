@model CTLLunch.Models.EmployeeModel;
@{
    ViewData["Title"] = "Home";
    List<EmployeeModel> employees = ViewBag.employees;
    EmployeeModel employee = ViewBag.employee;
    double balance = employee.balance;
}

<link rel="preconnect" href="https://fonts.gstatic.com">
<link href="https://fonts.googleapis.com/css2?family=Mitr:wght@300&display=swap" rel="stylesheet">

<style type="text/css">
    body {
        font-family: 'Mitr', sans-serif;
    }
</style>

<style>
    .active {
        background-color: #6cbd93 !important;
        color: white !important
    }

    .vertical-line {
        border-right: 1px solid gray;
    }

</style>
<div class="container">
    <div class="row p-1" style="row-gap:1px">
        <div class="col-xl-12">
            <div class="card card-dark">
                <div class="card-header" style="background-color: #034694">
                    <span class="card-title">ข้อมูล/โอนเงิน</span>
                </div>
                <div class="card-body" style="overflow-x:auto">
                    <div class="row">
                        <div class="col-12 col-md-6 col-xl-6">
                            <div class="row">
                                <div class="col-4 col-md-2 col-xl-2">
                                    <label style="font-size:22px">ข้อมูล</label>
                                </div>
                            </div>
                            <div class="row pt-2">
                                <div class="col-2 col-md-4 col-xl-4">
                                    <label style="font-size:18px">ชื่่อ : </label>
                                </div>
                                <div class="col-10 col-md-8 col-xl-8">
                                    <p style="font-size:20px">@employee.employee_name</p>
                                </div>
                            </div>
                            <div class="row pt-2">
                                <div class="col-6 col-md-4 col-xl-4">
                                    <label style="font-size:18px">ยอดเงินคงเหลือ : </label>
                                </div>
                                <div class="col-6 col-md-8 col-xl-8">
                                    <p style="font-size:20px"><b>฿@balance</b></p>
                                </div>
                            </div>
                        </div>
                        <div class="col-12 col-md-6 col-xl-6">
                            <div class="row">
                                <div class="col-4 col-md-2 col-xl-2">
                                    <label style="font-size:22px">โอนเงิน</label>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-4 col-md-4 col-xl-4">
                                    <label style="font-size:18px">แผนก : </label>
                                </div>
                                <div class="col-8 col-md-8 col-xl-8">
                                    <select id="select_department_transfer" class="form-control">
                                        <option value="" selected disabled>Please Select</option>
                                        @{
                                            List<string> departments = employees.GroupBy(g => g.department).Select(s => s.FirstOrDefault().department).ToList();
                                            for (int i = 0; i < departments.Count; i++)
                                            {
                                                                        <option value="@departments[i]">@departments[i]</option>
                                            }
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="row pt-2">
                                <div class="col-4 col-md-4 col-xl-4">
                                    <label style="font-size:18px">ไปยัง : </label>
                                </div>
                                <div class="col-8 col-md-8 col-xl-8">
                                    <select id="select_employee_transfer" class="form-control">
                                    </select>
                                </div>
                            </div>
                            <div class="row pt-2">
                                <div class="col-4 col-md-4 col-xl-4">
                                    <label style="font-size:18px">จำนวนเงิน : </label>
                                </div>
                                <div class="col-4 col-md-4 col-xl-4">
                                    <input type="number" id="employee_transfer_balance" class="form-control" value="0" />
                                </div>
                                <div class="col-4 col-md-4 col-xl-4 d-flex justify-content-end">
                                    <input type="button" id="btn_transfer_money" class="btn btn-warning" value="โอนเงิน" style="border-radius:20px;width:120px;height:40px;font-size:18px" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @{
        if (Model.role == "Admin")
        {
                                    <div class="row p-1" style="row-gap:1px">
                                        <div class="col-xl-12">
                                            <div class="card card-dark">
                                                <div class="card-header" style="background-color: #034694">
                                                    <span class="card-title">เติมเงิน</span>
                                                </div>
                                                <div class="card-body" style="overflow-x:auto">
                                                    <div class="row pt-2">
                                                        <div class="col-xl-12">
                                                            <div class="row">
                                                                <div class="col-4 col-md-2 col-xl-2">
                                                                    <label style="font-size:18px">แผนก : </label>
                                                                </div>
                                                                <div class="col-8 col-md-4 col-xl-4">
                                                                    <select id="select_department" class="form-control">
                                                                        <option value="" selected disabled>Please Select</option>
                                                                        @{
                                                    List<string> _departments_ = employees.GroupBy(g => g.department).Select(s => s.FirstOrDefault().department).ToList();
                                                    for (int i = 0; i < departments.Count; i++)
                                                    {
                                                                                                        <option value="@departments[i]">@departments[i]</option>
                                                    }
                                                                        }
                                                                    </select>
                                                                </div>
                                                            </div>
                                                            <div class="row pt-2">
                                                                <div class="col-4 col-md-2 col-xl-2">
                                                                    <label style="font-size:18px">ชื่อ : </label>
                                                                </div>
                                                                <div class="col-8 col-md-4 col-xl-4">
                                                                    <select id="select_employee" class="form-control">
                                                                    </select>
                                                                </div>
                                                            </div>
                                                            <div class="row">
                                                                <div class="col-6 col-md-2 col-xl-2">
                                                                    <label style="font-size:18px">จำนวนเงินที่เติม : </label>
                                                                </div>
                                                                <div class="col-6 col-md-2 col-xl-2">
                                                                    <p style="font-size:20px" id="employee_add_money">฿0</p>
                                                                </div>
                                                            </div>
                                                            <div class="row pt-2">
                                                                @{
                                            List<int> moneys = new List<int>() { 100, 200, 300, 400, 500, 1000 };
                                            for (int i = 0; i < moneys.Count; i++)
                                            {
                                                                                                <div class="col-4 col-md-2 col-xl-2 p-1">
                                                                                                    <button id="btn_add_money" class="form-control" style="width: 100px; height: 100px; font-size: 20px;font-weight:600;background-color:#F2F2F2;border-radius:5px;" onclick="AddMoney_Click(`@moneys[i]`)">฿@moneys[i]</button>
                                                                                                </div>
                                            }
                                                                }
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="form-row d-flex justify-content-center pt-3" style="row-gap:3px">
                                                        <input type="button" id="btn_update_money" class="btn btn-success" value="เติมเงิน" style="border-radius:25px;width:200px;height:50px;font-size:20px" />
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
        }
    }
    <div class="row p-1" style="row-gap:1px">
        <div class="col-xl-12">
            <div class="card card-dark" style="height:500px">
                <div class="card-header" style="background-color: #034694">
                    <span class="card-title">ประวัติการเติมเงิน</span>
                </div>
                <div class="card-body" style="overflow-x:auto">
                    <table id="table_add_money" class="table table-sm table-hover text-center w-100">
                        <thead style="background-color: #F2F2F2;color:black;border-color:greenyellow;border-width:2px;border:solid">
                            <tr>
                                <th>ลำดับ</th>
                                <th>วันที่</th>
                                <th>ผู้โอน</th>
                                <th>ผู้รับเงิน</th>
                                <th>จำนวนเงิน</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="row p-1" style="row-gap:1px">
        <div class="col-xl-12">
            <div class="card card-dark" style="height:500px">
                <div class="card-header" style="background-color: #034694">
                    <span class="card-title">ประวัติการจ่าย</span>
                </div>
                <div class="card-body" style="overflow-x:auto">
                    <table id="table_pay" class="table table-sm table-hover text-center w-100">
                        <thead style="background-color: #F2F2F2;color:black;border-color:greenyellow;border-width:2px;border:solid">
                            <tr>
                                <th>ลำดับ</th>
                                <th>วันที่</th>
                                <th>ผู้โอน</th>
                                <th>ผู้จ่าย</th>
                                <th>จำนวนเงิน</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="row p-1" style="row-gap:1px">
        <div class="col-xl-12">
            <div class="card card-dark" style="height:500px">
                <div class="card-header" style="background-color: #034694">
                    <span class="card-title">ประวัติการโอนเงิน</span>
                </div>
                <div class="card-body" style="overflow-x:auto">
                    <table id="table_transfer" class="table table-sm table-hover text-center w-100">
                        <thead style="background-color: #F2F2F2;color:black;border-color:greenyellow;border-width:2px;border:solid">
                            <tr>
                                <th>ลำดับ</th>
                                <th>วันที่</th>
                                <th>ผู้โอน</th>
                                <th>ผู้รับเงิน</th>
                                <th>จำนวนเงิน</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="row p-1" style="row-gap:1px">
        <div class="col-xl-12">
            <div class="card card-dark" style="height:500px">
                <div class="card-header" style="background-color: #034694">
                    <span class="card-title">ธุรกรรม</span>
                </div>
                <div class="card-body" style="overflow-x:auto">
                    <table id="table_transaction" class="table table-sm table-hover text-center w-100">
                        <thead style="text-align:center; background-color: #F2F2F2;color:black;border-color:greenyellow;border-width:2px;border:solid">
                            <tr>
                                <th>วันที่</th>
                                <th>ชื่อ</th>
                                <th>เติม</th>
                                <th>จ่าย</th>
                                <th>ถอน</th>
                                <th>โอน</th>
                                <th>คงเหลือ</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modal_confirm_add_money" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog modal-dialog-centered modal-md" role="document">
        <div class="modal-content">
            <div class="modal-body">
                <form>
                    <p style="font-size:20px">คุณต้องการทำรายการนี้หรือไม่ ?</p>
                    <p id="p_add_money" style="font-size:18px"></p>
                </form>
            </div>
            <div class="modal-footer">
                <input type="button" class="btn btn-secondary" data-dismiss="modal" value="ยกเลิก" />
                <input id="btn_confirm_add_money" type="button" class="btn btn-success" value="ทำรายการ" />
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="modal_confirm_transfer_money" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog modal-dialog-centered modal-md" role="document">
        <div class="modal-content">
            <div class="modal-body">
                <form>
                    <p style="font-size:20px">คุณต้องการทำรายการนี้หรือไม่ ?</p>
                    <p id="p_transfer_money" style="font-size:18px"></p>
                </form>
            </div>
            <div class="modal-footer">
                <input type="button" class="btn btn-secondary" data-dismiss="modal" value="ยกเลิก" />
                <input id="btn_confirm_transfer_money" type="button" class="btn btn-success" value="ทำรายการ" />
            </div>
        </div>
    </div>
</div>
@section Scripts
{
    <script type="text/javascript">
        var table_add_money;
        var table_transaction;
        var table_transfer;
        var table_pay;
        let employee_amount = 0;
        $(document).ready(async function () {
            let employee_id = '@Html.Raw(employee.employee_id)';
            await GetTransaction(employee_id);
            await GetTransactionAddMoney(employee_id);
            await GetTransactionTransfer(employee_id);
            await GetTransactionPay(employee_id);
        });

        $('button').click(function () {
            $('button').removeClass("active");
            $(this).addClass("active");
        });

        $('#select_department').on('change', function () {
            let department = $('#select_department').val();
            SelectDepartment(department);
        });

        $('#select_department_transfer').on('change', function () {
            let department = $('#select_department_transfer').val();
            SelectDepartmentTransfer(department);
        });
        $('#select_employee').on('change', async function () {
            let employee_id = $('#select_employee').val();
            let employees = JSON.parse('@Html.Raw(Json.Serialize(employees))');
            let emps = employees.filter(f => f.employee_id === employee_id).map(m => m)[0];
            $('#employee_balance').text("฿" + emps.balance);
            await GetTransactionAddMoney(employee_id);
            
        });

        function SelectDepartment(department) {
            let employees = JSON.parse('@Html.Raw(Json.Serialize(employees))');
            let emps = employees.filter(f => f.department === department).map(m => m);
            var str = '<option value="" selected disabled>Please Select</option>';
            for (var i = 0; i < emps.length; i++) {
                str += `<option value=${emps[i].employee_id}>${emps[i].employee_name} (${emps[i].employee_nickname})</option>`;
            }
            $('#select_employee').empty();
            $('#select_employee').append(str);
        }
        function SelectDepartmentTransfer(department) {
            let employee = JSON.parse('@Html.Raw(Json.Serialize(employee))');
            let employees = JSON.parse('@Html.Raw(Json.Serialize(employees))');
            let emps = employees.filter(f => f.department === department).map(m => m);
            var str = '<option value="" selected disabled>Please Select</option>';
            for (var i = 0; i < emps.length; i++) {
                if (emps[i].employee_id !== employee.employee_id) {
                    str += `<option value=${emps[i].employee_id}>${emps[i].employee_name} (${emps[i].employee_nickname})</option>`;
                }
            }
            $('#select_employee_transfer').empty();
            $('#select_employee_transfer').append(str);
        }
        function AddMoney_Click(amount) {
            employee_amount = amount;
            $('#employee_add_money').text("฿" + amount);
        };

        $('#btn_update_money').on('click', function () {
            let employee_id = $('#select_employee').find(':selected').text();
            let amount = employee_amount;
            $('#p_add_money').text(employee_id + " จำนวน : " + amount + " บาท");
            $('#modal_confirm_add_money').modal();
        });

        $('#btn_confirm_add_money').on('click', async function () {
            let employee_id = $('#select_employee').val();
            let amount = employee_amount;
            if (employee_id !== null && employee_id !== "" && amount > 0) {
                await $.ajax({
                    type: "POST",
                    url: '@Url.Action("InsertBalance", "Home")',
                    contentType: 'application/x-www-form-urlencoded',
                    data: { employee_id, amount },
                    success: function (response) {
                        if (response === "Success") {
                            window.location.reload();
                        } else {
                            alert(response);
                        }
                    }
                });
            } else {
                alert('Error');
            }
        });

        $('#btn_transfer_money').on('click', function () {
            let employee_id_from = '@Html.Raw(employee.employee_name)';
            let employee_id_to = $('#select_employee_transfer').find(':selected').text();
            let amount = $('#employee_transfer_balance').val();
            let str = "โอนจาก " + employee_id_from + " ไปยัง " + employee_id_to + " จำนวน " + amount + " บาท";
            $('#p_transfer_money').text(str);
            $('#modal_confirm_transfer_money').modal();
        });

        $('#btn_confirm_transfer_money').on('click', async function () {
            let employee_id_from = '@Html.Raw(employee.employee_id)';
            let employee_id_to = $('#select_employee_transfer').val();
            let amount = $('#employee_transfer_balance').val();
            if (employee_id_to !== null && employee_id_to !== "" && amount > 0) {
                await $.ajax({
                    type: "POST",
                    url: '@Url.Action("TransferBalance", "Home")',
                    contentType: 'application/x-www-form-urlencoded',
                    data: { employee_id_from, employee_id_to, amount },
                    success: function (response) {
                        if (response === "Success") {
                            window.location.reload();
                        } else {
                            alert(response);
                        }
                    }
                });
            } else {
                alert('Error');
            }
        });

        async function GetTransaction(employee_id) {
            await $.ajax({
                type: "GET",
                url: '@Url.Action("GetTransactionByEmployee", "Home")',
                contentType: 'application/x-www-form-urlencoded',
                data: { employee_id },
                success: function (response) {
                    let transactions = response.transactions;
                    let current_balance = response.balance;
                    GenerateTableTransaction(transactions, current_balance);
                }
            });
        }

        async function GetTransactionAddMoney(employee_id) {
            await $.ajax({
                type: "GET",
                url: '@Url.Action("GetTransactionAdd", "Home")',
                contentType: 'application/x-www-form-urlencoded',
                data: { employee_id },
                success: function (response) {
                    GenerateTableSummary(response);
                }
            });
        }

        async function GetTransactionTransfer(employee_id) {
            await $.ajax({
                type: "GET",
                url: '@Url.Action("GetTransactionTransfer", "Home")',
                contentType: 'application/x-www-form-urlencoded',
                data: { employee_id },
                success: function (response) {
                    GenerateTableTransfer(response);
                }
            });
        }
        async function GetTransactionPay(employee_id) {
            await $.ajax({
                type: "GET",
                url: '@Url.Action("GetTransactionPay", "Home")',
                contentType: 'application/x-www-form-urlencoded',
                data: { employee_id },
                success: function (response) {
                    GenerateTablePay(response);
                }
            });
        }

        function GenerateTableSummary(datas) {
            let _datas = [];
            for (let i = 0; i < datas.length; i++) {
                _datas.push([
                    (i + 1),
                    datas[i].date.split('T')[0] + " " + datas[i].date.split('T')[1],
                    datas[i].employee_name,
                    datas[i].receiver_name,
                    "+" + datas[i].amount
                ]);
            }

            if (table_add_money !== undefined) {
                table_add_money.destroy();
            }
            table_add_money = $('#table_add_money').DataTable({
                data: _datas,
                columnDefs: [
                    {
                        targets: 0,
                        className: "text-center"
                    },
                ],
                rowCallback: function (row, data) {
                    $('td', row).css('color', "green");
                },
                searching: true,
                paging: false,
                info: false,
                order: false,
            });
        }
        function GenerateTableTransaction(transactions, current_balance) {
            let datas = [];
            let sum_pay = 0;
            let sum_add = 0;
            let sum_close = 0;
            let sum_transfer = 0;
            let balance = current_balance;
            for (let i = 0; i < transactions.length; i++) {
                if (transactions[i].type === "Add") {
                    balance += transactions[i].amount;
                    datas.push([transactions[i].date.split('T')[0] + " " + transactions[i].date.split('T')[1],
                    transactions[i].employee_name,
                    "+" + transactions[i].amount,
                        "",
                        "",
                        "",
                        balance
                    ]);
                    sum_add += transactions[i].amount;
                }
                if (transactions[i].type === "Pay") {
                    balance -= transactions[i].amount;
                    datas.push([transactions[i].date.split('T')[0] + " " + transactions[i].date.split('T')[1],
                    transactions[i].employee_name,
                        "",
                    "-" + transactions[i].amount,
                        "",
                        "",
                        balance
                    ]);
                    sum_pay -= transactions[i].amount;
                }
                if (transactions[i].type === "Close") {
                    balance -= transactions[i].amount;
                    datas.push([transactions[i].date.split('T')[0] + " " + transactions[i].date.split('T')[1],
                    transactions[i].employee_name,
                        "",
                        "",
                    "-" + transactions[i].amount,
                        "",
                        balance
                    ]);
                    sum_close -= transactions[i].amount;
                }
                if (transactions[i].type === "Receive") {
                    balance += transactions[i].amount;
                    datas.push([transactions[i].date.split('T')[0] + " " + transactions[i].date.split('T')[1],
                    transactions[i].employee_name,
                        "",
                        "",
                        "",
                    "+" + transactions[i].amount,
                        balance
                    ]);
                    sum_transfer += transactions[i].amount;
                }
                if (transactions[i].type === "Transfer") {
                    balance -= transactions[i].amount;
                    datas.push([transactions[i].date.split('T')[0] + " " + transactions[i].date.split('T')[1],
                    transactions[i].employee_name,
                        "",
                        "",
                        "",
                    "-" + transactions[i].amount,
                        balance
                    ]);
                    sum_transfer -= transactions[i].amount;
                }
            }

            // Summary
            datas.push(["รวม", "", sum_add.toString(), sum_pay.toString(), sum_close.toString(), sum_transfer.toString(), balance.toString()]);


            if (table_transaction !== undefined) {
                table_transaction.destroy();
            }

            table_transaction = $('#table_transaction').DataTable({
                data: datas,
                columnDefs: [
                    {
                        targets: 0,
                        width: "20%"
                    },
                    {
                        targets: 1,
                        width: "40%",
                        className: 'dt-head-center',
                        className: "dt-body-left",
                    }
                ],
                rowCallback: function (row, data) {
                    let no = data[0];
                    let add = data[2];
                    let pay = data[3];
                    let close = data[4];
                    let transfer = data[5].substring(0, 1);
                    if (add !== "" || transfer === "+") {
                        $('td', row).css('color', "green");
                    }
                    if (pay !== "" || close !== "" || transfer === "-") {
                        $('td', row).css('color', "red");
                    }
                    if (no === "รวม") {
                        $('td', row).css('color', "black");
                        $('td', row).css('font-weight', "bold");
                    }
                },
                searching: true,
                paging: false,
                info: false,
                order: false,
            });
        }
        function GenerateTableTransfer(datas) {
            let _datas = [];
            let user = '@Html.Raw(employee.employee_name)';
            for (let i = 0; i < datas.length; i++) {
                if (user === datas[i].employee_name) {
                    _datas.push([
                        (i + 1),
                        datas[i].date.split('T')[0] + " " + datas[i].date.split('T')[1],
                        datas[i].employee_name,
                        datas[i].receiver_name,
                        "-" + datas[i].amount
                    ]);
                } else {
                    _datas.push([
                        (i + 1),
                        datas[i].date.split('T')[0] + " " + datas[i].date.split('T')[1],
                        datas[i].employee_name,
                        datas[i].receiver_name,
                        "+" + datas[i].amount
                    ]);
                }
            }

            if (table_transfer !== undefined) {
                table_transfer.destroy();
            }
            table_transfer = $('#table_transfer').DataTable({
                data: _datas,
                columnDefs: [
                    {
                        targets: 0,
                        className: "text-center"
                    },
                ],
                rowCallback: function (row, data) {
                    let amount = data[4];
                    if (amount < 0) {
                        $('td', row).css('color', "red");
                    } else {
                        $('td', row).css('color', "green");
                    }
                },
                searching: true,
                paging: false,
                info: false,
                order: false,
            });
        }
        function GenerateTablePay(datas) {
            let _datas = [];
            for (let i = 0; i < datas.length; i++) {
                _datas.push([
                    (i + 1),
                    datas[i].date.split('T')[0] + " " + datas[i].date.split('T')[1],
                    datas[i].receiver_name,
                    datas[i].employee_name,
                    "-" + datas[i].amount
                ]);
            }

            if (table_pay !== undefined) {
                table_pay.destroy();
            }
            table_pay = $('#table_pay').DataTable({
                data: _datas,
                columnDefs: [
                    {
                        targets: 0,
                        className: "text-center"
                    },
                ],
                rowCallback: function (row, data) {                    
                    $('td', row).css('color', "red");                   
                },
                searching: true,
                paging: false,
                info: false,
                order:false,
            });
        }
    </script>
}