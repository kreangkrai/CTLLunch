@model CTLLunch.Models.EmployeeModel;
@{
    ViewData["Title"] = "Home";
    List<EmployeeModel> employees = ViewBag.employees;
    EmployeeModel employee = ViewBag.employee;
    double balance = employee.balance;
    //Model.role = "XXX";
}

<link rel="preconnect" href="https://fonts.gstatic.com">
<link href="https://fonts.googleapis.com/css2?family=Mitr:wght@300&display=swap" rel="stylesheet">

<style type="text/css">
    body {
        font-family: 'Mitr', sans-serif;
    }
</style>

<style>
    .active {
        background-color: #6cbd93 !important;
        color: white !important
    }

    .vertical-line {
        border-right: 1px solid gray;
    }

</style>
<div class="container">
    <div class="row p-1" style="row-gap:1px">
        <div class="col-xl-12">
            <div class="card card-dark">
                <div class="card-header" style="background-color: #034694">
                    <span class="card-title">ข้อมูล/โอนเงิน</span>
                </div>
                <div class="card-body" style="overflow-x:auto">
                    <div class="row">
                        <div class="col-12 col-md-6 col-xl-6">
                            <div class="row">
                                <div class="col-4 col-md-2 col-xl-2">
                                    <label style="font-size:22px">ข้อมูล</label>
                                </div>
                            </div>
                            <div class="row pt-2">
                                <div class="col-2 col-md-4 col-xl-4">
                                    <label style="font-size:18px">ชื่อ : </label>
                                </div>
                                <div class="col-10 col-md-8 col-xl-8">
                                    <p style="font-size:20px">@employee.employee_name</p>
                                </div>
                            </div>
                            <div class="row pt-2">
                                <div class="col-6 col-md-4 col-xl-4">
                                    <label style="font-size:18px">ยอดเงินคงเหลือ : </label>
                                </div>
                                <div class="col-6 col-md-8 col-xl-8">
                                    <p style="font-size:20px"><b>฿@balance</b></p>
                                </div>
                            </div>
                        </div>
                        <div class="col-12 col-md-6 col-xl-6">
                            <div class="row">
                                <div class="col-4 col-md-2 col-xl-2">
                                    <label style="font-size:22px">โอนเงิน</label>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-4 col-md-4 col-xl-4">
                                    <label style="font-size:18px">แผนก : </label>
                                </div>
                                <div class="col-8 col-md-8 col-xl-8">
                                    <select id="select_department_transfer" class="form-control">
                                        <option value="" selected disabled>Please Select</option>
                                        @{
                                            List<string> departments = employees.GroupBy(g => g.department).Select(s => s.FirstOrDefault().department).ToList();
                                            for (int i = 0; i < departments.Count; i++)
                                            {
                                                <option value="@departments[i]">@departments[i]</option>
                                            }
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="row pt-2">
                                <div class="col-4 col-md-4 col-xl-4">
                                    <label style="font-size:18px">ไปยัง : </label>
                                </div>
                                <div class="col-8 col-md-8 col-xl-8">
                                    <select id="select_employee_transfer" class="form-control">
                                    </select>
                                </div>
                            </div>
                            <div class="row pt-2">
                                <div class="col-4 col-md-4 col-xl-4">
                                    <label style="font-size:18px">จำนวนเงิน : </label>
                                </div>
                                <div class="col-4 col-md-4 col-xl-4">
                                    <input type="number" id="employee_transfer_balance" class="form-control" value="0" />
                                </div>
                                <div class="col-4 col-md-4 col-xl-4 d-flex justify-content-end">
                                    <input type="button" id="btn_transfer_money" class="btn btn-warning" value="โอนเงิน" style="border-radius:20px;width:120px;height:40px;font-size:18px" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row p-1" style="row-gap:1px">
        <div class="col-xl-12">
            <div class="card card-dark">
                <div class="card-header" style="background-color: #034694">
                    <span class="card-title">เติมเงิน</span>
                </div>
                <div class="card-body" style="overflow-x:auto">
                    <div class="row pt-2">
                        <div class="col-xl-12">
                            @{
                                if (Model.role == "Admin")
                                {
                                                                                                        <div class="row">
                                                                                                            <div class="col-4 col-md-2 col-xl-2">
                                                                                                                <label style="font-size:18px">แผนก : </label>
                                                                                                            </div>

                                                                                                            <div class="col-8 col-md-4 col-xl-4">
                                                                                                                <select id="select_department" class="form-control">
                                                                                                                    <option value="" selected disabled>Please Select</option>
                                                                                                                    @{
                                                List<string> _departments_ = employees.GroupBy(g => g.department).Select(s => s.FirstOrDefault().department).ToList();
                                                                                                                                                                                            @for (int i = 0; i < departments.Count; i++)
                                                    {
                                                                                                                                                                                                <option value="@departments[i]">@departments[i]</option>
                                                    }
                                                                                                                    }
                                                                                                                </select>
                                                                                                            </div>
                                                                                                        </div>
                                }
                            }
                            <div class="row pt-2">
                                <div class="col-4 col-md-2 col-xl-2">
                                    <label style="font-size:18px">ชื่อ : </label>
                                </div>
                                <div class="col-8 col-md-4 col-xl-4">
                                    <select id="select_employee" class="form-control">
                                        <option value="" selected disabled>Please Select</option>
                                        @{
                                            if (Model.role != "Admin")
                                            {
                                                EmployeeModel _employee = employees.Where(w => w.employee_id == Model.employee_id).FirstOrDefault();
                                                                                                                    <option value="@_employee.employee_id">@_employee.employee_name</option>
                                            }
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-6 col-md-2 col-xl-2">
                                    <label style="font-size:18px">จำนวนเงินที่เติม : </label>
                                </div>
                                <div class="col-6 col-md-2 col-xl-2">
                                    <p style="font-size:20px" id="employee_add_money">฿0</p>
                                </div>
                            </div>
                            <div class="row pt-2">
                                @{
                                    List<int> moneys = new List<int>() { 300, 400, 500, 1000, 1500, 2000 };
                                    for (int i = 0; i < moneys.Count; i++)
                                    {
                                                                                                            <div class="col-4 col-md-2 col-xl-2 d-flex justify-content-center p-1">
                                                                                                                <button id="btn_add_money" class="form-control" style="width: 100px; height: 100px; font-size: 20px;font-weight:600;background-color:#F2F2F2;border-radius:5px;" onclick="AddMoney_Click(`@moneys[i]`)">฿@moneys[i]</button>
                                                                                                            </div>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                    <div class="form-row d-flex justify-content-center pt-3" style="row-gap:3px">
                        <input type="button" id="btn_update_money" class="btn btn-success" value="เติมเงิน" style="border-radius:25px;width:200px;height:50px;font-size:20px" />
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row p-1" style="row-gap:1px">
        <div class="col-xl-12">
            <div class="card card-dark" style="height:500px">
                <div class="card-header" style="background-color: #034694">
                    <span class="card-title">สถานะเติมเงิน</span>
                </div>
                <div class="card-body" style="overflow-x:auto">
                    @{
                        if (Model.role == "Admin")
                        {
                                                                                                <table id="table_topup" class="table table-sm table-hover text-center w-100">
                                                                                                    <thead style="background-color: #F2F2F2;color:black;border-color:greenyellow;border-width:2px;border:solid">
                                                                                                        <tr>
                                                                                                            <th>No</th>
                                                                                                            <th>วันที่</th>
                                                                                                            <th>ชื่อ</th>
                                                                                                            <th>จำนวนเงิน</th>                                
                                                                                                            <th>หมายเหตุ</th>                               
                                                                                                            <th>สถานะ</th>
                                                                                                            <th></th>
                                                                                                        </tr>
                                                                                                    </thead>
                                                                                                    <tbody></tbody>
                                                                                                </table>
                        }
                    else{
                                                                                        <table id="table_topup" class="table table-sm table-hover text-center w-100">
                                                                                            <thead style="background-color: #F2F2F2;color:black;border-color:greenyellow;border-width:2px;border:solid">
                                                                                                <tr>
                                                                                                    <th>No</th>
                                                                                                    <th>วันที่</th>
                                                                                                    <th>ชื่อ</th>
                                                                                                    <th>จำนวนเงิน</th>
                                                                                                    <th>หมายเหตุ</th>
                                                                                                    <th>สถานะ</th>
                                                                                                            <th></th>
                                                                                                            <th></th>
                                                                                                </tr>
                                                                                            </thead>
                                                                                            <tbody></tbody>
                                                                                        </table>
                    }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="row p-1" style="row-gap:1px">
        <div class="col-xl-12">
            <div class="card card-dark" style="height:500px">
                <div class="card-header" style="background-color: #034694">
                    <span class="card-title">ประวัติการเติมเงิน</span>
                </div>
                <div class="card-body" style="overflow-x:auto">                   
                        <table id="table_add_money" class="table table-sm table-hover text-center w-100">
                            <thead style="background-color: #F2F2F2;color:black;border-color:greenyellow;border-width:2px;border:solid">
                                <tr>
                                    <th>No</th>
                                    <th>วันที่</th>
                                    <th>ผู้ดำเนินการ</th>
                                    <th>จำนวนเงิน</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>                    
                </div>
            </div>
        </div>
    </div>
    <div class="row p-1" style="row-gap:1px">
        <div class="col-xl-12">
            <div class="card card-dark" style="height:500px">
                <div class="card-header" style="background-color: #034694">
                    <span class="card-title">ประวัติการจ่ายเงิน</span>
                </div>
                <div class="card-body" style="overflow-x:auto">
                    <table id="table_pay" class="table table-sm table-hover text-center w-100">
                        <thead style="background-color: #F2F2F2;color:black;border-color:greenyellow;border-width:2px;border:solid">
                            <tr>
                                <th>No</th>
                                <th>วันที่</th>
                                <th>ผู้ดำเนินการ</th>
                                <th>จำนวนเงิน</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="row p-1" style="row-gap:1px">
        <div class="col-xl-12">
            <div class="card card-dark" style="height:500px">
                <div class="card-header" style="background-color: #034694">
                    <span class="card-title">ประวัติการโอนเงิน</span>
                </div>
                <div class="card-body" style="overflow-x:auto">
                    <table id="table_transfer" class="table table-sm table-hover text-center w-100">
                        <thead style="background-color: #F2F2F2;color:black;border-color:greenyellow;border-width:2px;border:solid">
                            <tr>
                                <th>ลำดับ</th>
                                <th>วันที่</th>
                                <th>ผู้โอน</th>
                                <th>ผู้รับเงิน</th>
                                <th>จำนวนเงิน</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="row p-1" style="row-gap:1px">
        <div class="col-xl-12">
            <div class="card card-dark" style="height:500px">
                <div class="card-header" style="background-color: #034694">
                    <span class="card-title">ธุรกรรม</span>
                </div>
                <div class="card-body" style="overflow-x:auto">
                    <table id="table_transaction" class="table table-sm table-hover text-center w-100">
                        <thead style="text-align:center; background-color: #F2F2F2;color:black;border-color:greenyellow;border-width:2px;border:solid">
                            <tr>
                                <th>วันที่</th>
                                <th>ชื่อ</th>
                                <th>เติม</th>
                                <th>จ่าย</th>
                                <th>ถอน</th>
                                <th>โอน</th>
                                <th>คงเหลือ</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modal_confirm_add_money" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog modal-dialog-centered modal-md" role="document">
        <div class="modal-content">
            <div class="modal-body">
                <form>
                    <p style="font-size:20px">คุณต้องการทำรายการนี้หรือไม่ ?</p>                    
                    <p id="p_topup_money" style="font-size:18px;text-align:center"></p>
                    <p id="p_add_money" style="font-size:18px;text-align:center"></p>
                    <div class="row">
                        <div class="col-xl-12 d-flex justify-content-center">
                            <img id="topup_money_image" src="#" alt="" style="width:240px;height:320px;cursor:pointer" />
                        </div>
                    </div>
                    <div class="row pt-1">
                        <div class="col-6 col-md-6 col-xl-6 d-flex justify-content-end">
                            <input type="button" id="btn_add_slip_topup" class="btn btn-primary" value="เพิ่มสลิป" style="width:120px;font-size:16px"/>
                        </div>
                        <div class="col-6 col-md-6 col-xl-6 d-flex justify-content-start">
                            <input type="button" id="btn_view_slip_topup" class="btn btn-warning" value="ดูสลิป" style="width:120px;font-size:16px"/>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <input type="button" class="btn btn-secondary" data-dismiss="modal" value="ยกเลิก" />
                <input id="btn_confirm_add_money" type="button" class="btn btn-success" value="ทำรายการ" />
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="modal_confirm_transfer_money" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog modal-dialog-centered modal-md" role="document">
        <div class="modal-content">
            <div class="modal-body">
                <form>
                    <p style="font-size:20px">คุณต้องการทำรายการนี้หรือไม่ ?</p>
                    <p id="p_transfer_money" style="font-size:18px"></p>
                </form>
            </div>
            <div class="modal-footer">
                <input type="button" class="btn btn-secondary" data-dismiss="modal" value="ยกเลิก" />
                <input id="btn_confirm_transfer_money" type="button" class="btn btn-success" value="ทำรายการ" />
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="ImportModal" tabindex="-1" role="dialog" style="overflow-y:auto">
    <div class="modal-dialog modal-dialog-centered modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title"><b>เพิ่มใบสลิป</b></h4>
                <p id="topup_money" style="font-size:18px;text-align:center" hidden></p>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">
                <div class="modal-body">
                    <form>
                        <div class="row pt-1" style="row-gap:1px">
                            <div class="col-xl-12">
                                <div class="card elevation-1">
                                    <div class="card-header">
                                        <span class="card-title">
                                            <i class="fas fa-file-excel"></i> <b> Import File</b>
                                        </span>
                                    </div>
                                    <div class="card-body">
                                        <div class="form-group">
                                            <label id="importFileName">File Name</label>
                                            <input id="importFile" type="file" class="form-control-file" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modal_topup" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog modal-dialog-centered modal-md" role="document">
        <div class="modal-content">
            <div class="modal-body">
                <form>
                    <div claas="row">
                        <div class="col-xl-12">
                            <div class="form-group">
                                <label>ข้อมูล</label>
                                <div class="row">
                                    <div class="col-xl-2">
                                        <p>รายการ</p>
                                    </div>
                                    <div class="col-xl-10">
                                        <p id="p_no_topup"></p>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-xl-2">
                                        <p>ชื่อ</p>
                                    </div>
                                    <div class="col-xl-10">
                                        <p id="p_name_topup"></p>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-xl-2">
                                        <p>จำนวน</p>
                                    </div>
                                    <div class="col-xl-10">
                                        <p id="p_amount_topup"></p>
                                    </div>
                                </div>                                
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xl-12 d-flex justify-content-center">
                            <img id="topup_image" src="#" alt="" style="width:240px;height:300px;cursor:pointer" />
                        </div>
                    </div>
                    <div claas="row">
                        <div class="col-xl-12">
                            <div class="form-group">
                                <label>สถานะ</label>
                                <select id="select_status_topup" class="form-control">
                                    <option value="Approve">Approve</option>
                                    <option value="Cancel">Cancel</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div claas="row">
                        <div class="col-xl-12">
                            <div class="form-group">
                                <label>รายละเอียด</label>
                                <textarea id="note_topup" class="form-control"></textarea>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <input type="button" class="btn btn-secondary" data-dismiss="modal" value="ยกเลิก" />
                <input id="btn_topup" type="button" class="btn btn-success" value="ตกลง" />
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="modal_confirm_topup" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog modal-dialog-centered modal-md" role="document">
        <div class="modal-content">
            <div class="modal-body">
                <form>
                    <p style="font-size:20px">คุณต้องการทำรายการนี้หรือไม่ ?</p>
                    <div class="row">
                        <div class="col-xl-2">
                            <p>รายการ</p>
                        </div>
                        <div class="col-xl-10">
                            <p id="p_confirm_no_topup" style="font-size:18px"></p>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xl-2">
                            <p>ชื่อ</p>
                        </div>
                        <div class="col-xl-10">
                            <p id="p_confirm_name_topup" style="font-size:18px"></p>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xl-2">
                            <p>จำนวน</p>
                        </div>
                        <div class="col-xl-10">
                            <p id="p_confirm_amount_topup" style="font-size:18px"></p>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xl-2">
                            <p>สถานะ</p>
                        </div>
                        <div class="col-xl-10">
                            <p id="p_confirm_status_topup" style="font-size:18px"></p>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xl-2">
                            <p>รายละเอียด</p>
                        </div>
                        <div class="col-xl-10">
                            <p id="p_confirm_note_topup" style="font-size:18px"></p>
                        </div>
                    </div>                   
                </form>
            </div>
            <div class="modal-footer">
                <input type="button" class="btn btn-secondary" data-dismiss="modal" value="ยกเลิก" />
                <input id="btn_confirm_topup" type="button" class="btn btn-success" value="ทำรายการ" />
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="modal_view_slip_topup" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog modal-dialog-centered modal-md" role="document">
        <div class="modal-content">
            <div class="modal-body">
                <form>                  
                    <div class="row">
                        <div class="col-xl-12 d-flex justify-content-center">
                            <img id="topup_view_image" src="#" alt="" style="width:300px;height:350px;cursor:pointer" />
                        </div>
                    </div>                   
                </form>
            </div>
            <div class="modal-footer">
                <input type="button" class="btn btn-secondary" data-dismiss="modal" value="ยกเลิก" />
            </div>
        </div>
    </div>
</div>
@section Scripts
{
    <script type="text/javascript">
        var table_topup;
        var table_add_money;
        var table_transaction;
        var table_transfer;
        var table_pay;
        let employee_amount = 0;
        let b_check_add_slip = false;
        $(document).ready(async function () {
            let employee_id = '@Html.Raw(employee.employee_id)';
            let role = '@Html.Raw(Model.role)';
            await GetTransaction(employee_id);
            
            await GetTransactionAddMoney(employee_id);
            await GetTransactionTransfer(employee_id);
            await GetTransactionPay(employee_id);
            if (role === "Admin") {
                await GetAdminTopups();
            }else{
                await GetTopups(employee_id);
            }
        });

        $('button').click(function () {
            $('button').removeClass("active");
            $(this).addClass("active");
        });

        $('#select_department').on('change', function () {
            let department = $('#select_department').val();
            SelectDepartment(department);
        });

        $('#select_department_transfer').on('change', function () {
            let department = $('#select_department_transfer').val();
            SelectDepartmentTransfer(department);
        });
        $('#select_employee').on('change', async function () {
            let employee_id = $('#select_employee').val();
            let employees = JSON.parse('@Html.Raw(Json.Serialize(employees))');
            let emps = employees.filter(f => f.employee_id === employee_id).map(m => m)[0];
            $('#employee_balance').text("฿" + emps.balance);
            await GetTransaction(employee_id);
            await GetTransactionAddMoney(employee_id);
            await GetTransactionTransfer(employee_id);
            await GetTransactionPay(employee_id);
        });

        function SelectDepartment(department) {
            let employees = JSON.parse('@Html.Raw(Json.Serialize(employees))');
            let emps = employees.filter(f => f.department === department).map(m => m);
            var str = '<option value="" selected disabled>Please Select</option>';
            for (var i = 0; i < emps.length; i++) {
                str += `<option value=${emps[i].employee_id}>${emps[i].employee_name} (${emps[i].employee_nickname})</option>`;
            }
            $('#select_employee').empty();
            $('#select_employee').append(str);
        }
        function SelectDepartmentTransfer(department) {
            let employee = JSON.parse('@Html.Raw(Json.Serialize(employee))');
            let employees = JSON.parse('@Html.Raw(Json.Serialize(employees))');
            let emps = employees.filter(f => f.department === department).map(m => m);
            var str = '<option value="" selected disabled>Please Select</option>';
            for (var i = 0; i < emps.length; i++) {
                if (emps[i].employee_id !== employee.employee_id) {
                    str += `<option value=${emps[i].employee_id}>${emps[i].employee_name} (${emps[i].employee_nickname})</option>`;
                }
            }
            $('#select_employee_transfer').empty();
            $('#select_employee_transfer').append(str);
        }
        function AddMoney_Click(amount) {
            employee_amount = amount;
            $('#employee_add_money').text("฿" + amount);
        };

        function padTwoDigits(number) {
            return number.toString().padStart(2, "0");
        }

        $('#btn_update_money').on('click', function () {
            var d = new Date();
            let month = padTwoDigits(d.getMonth() + 1);
            let day = padTwoDigits(d.getDate());
            let year = d.getFullYear();
            let hour = padTwoDigits(d.getHours());
            let minute = padTwoDigits(d.getMinutes());
            let second = padTwoDigits(d.getSeconds()); 
            let topup_id = [day, month, year, hour, minute, second].join('');
            let employee_id = $('#select_employee').val();
            let amount = employee_amount;
            let login_employee = '@Html.Raw(Model.employee_id)';
            if (amount > 0 && employee_id !== "Please Select" && login_employee === employee_id) {
                $('#p_topup_money').text(topup_id);
                $('#topup_money').text(topup_id);
                $('#p_add_money').text("จำนวน " + amount + " บาท");
                if (amount === "300") {
                    document.getElementById('topup_money_image').src = '@Url.Content("~/images/qrcode300.jpg")';
                }
                if (amount === "400") {
                    document.getElementById('topup_money_image').src = '@Url.Content("~/images/qrcode400.jpg")';
                }
                if (amount === "500") {
                    document.getElementById('topup_money_image').src = '@Url.Content("~/images/qrcode500.jpg")';
                }
                if (amount === "1000") {
                    document.getElementById('topup_money_image').src = '@Url.Content("~/images/qrcode1000.jpg")';
                }
                if (amount === "1500") {
                    document.getElementById('topup_money_image').src = '@Url.Content("~/images/qrcode1500.jpg")';
                }
                if (amount === "2000") {
                    document.getElementById('topup_money_image').src = '@Url.Content("~/images/qrcode2000.jpg")';
                }
                $('#modal_confirm_add_money').modal();
            } else {
                alert("ทำรายการไม่ถูกต้อง");
            }
        });

        $('#btn_confirm_add_money').on('click', async function () {
            let topup_id = $('#topup_money').text();
            let employee_id = $('#select_employee').val();
            let amount = employee_amount;
            let login_employee = '@Html.Raw(Model.employee_id)';
            if (login_employee === employee_id && employee_id !== null && employee_id !== "" && amount > 0 && b_check_add_slip === true) {
                await $.ajax({
                    type: "POST",
                    url: '@Url.Action("InsertTopup", "Home")',
                    contentType: 'application/x-www-form-urlencoded',
                    data: { employee_id, amount, topup_id },
                    success: function (response) {
                        if (response === "Success") {
                            window.location.reload();
                        } else {
                            alert(response);
                        }
                    }
                });               
            } else {
                alert('ทำรายการไม่ถูกต้อง');
            }
        });

        $('#btn_transfer_money').on('click', function () {
            let employee_id_from = '@Html.Raw(employee.employee_name)';
            let employee_id_to = $('#select_employee_transfer').find(':selected').text();
            let amount = $('#employee_transfer_balance').val();
            let str = "โอนจาก " + employee_id_from + " ไปยัง " + employee_id_to + " จำนวน " + amount + " บาท";
            $('#p_transfer_money').text(str);
            $('#modal_confirm_transfer_money').modal();
        });

        $('#btn_confirm_transfer_money').on('click', async function () {
            let employee_id_from = '@Html.Raw(employee.employee_id)';
            let employee_id_to = $('#select_employee_transfer').val();
            let amount = $('#employee_transfer_balance').val();
            if (employee_id_to !== null && employee_id_to !== "" && amount > 0) {
                await $.ajax({
                    type: "POST",
                    url: '@Url.Action("TransferBalance", "Home")',
                    contentType: 'application/x-www-form-urlencoded',
                    data: { employee_id_from, employee_id_to, amount },
                    success: function (response) {
                        if (response === "Success") {
                            window.location.reload();
                        } else {
                            alert(response);
                        }
                    }
                });
            } else {
                alert('ทำรายการไม่ถูกต้อง');
            }
        });

        $('#btn_topup').on('click', function () {
            let topup_id = $('#p_no_topup').text();
            let name = $('#p_name_topup').text();
            let amount = $('#p_amount_topup').text();
            let status = $('#select_status_topup').val();
            let note = $('#note_topup').val();

            $('#p_confirm_no_topup').text(topup_id);
            $('#p_confirm_name_topup').text(name);
            $('#p_confirm_amount_topup').text(amount);
            $('#p_confirm_status_topup').text(status);
            $('#p_confirm_note_topup').text(note);
            $('#modal_confirm_topup').modal();
        });

        $('#btn_confirm_topup').on('click', async function () {
            let employees = JSON.parse('@Html.Raw(Json.Serialize(employees))');
            let topup_id = $('#p_confirm_no_topup').text();
            let amount = $('#p_confirm_amount_topup').text();
            let name = $('#p_confirm_name_topup').text();
            let status = $('#p_confirm_status_topup').text();
            let note = $('#p_confirm_note_topup').text();
            let employee_id = employees.filter(f => f.employee_name === name).map(m => m.employee_id)[0];
            let receiver_id = '@Html.Raw(Model.employee_id)';
            var str = JSON.stringify({
                "topup_id": topup_id,
                "employee_id": employee_id,
                "receiver_id": receiver_id,
                "amount": amount,
                "status":status,
                "note":note
            });
            await $.ajax({
                type: "POST",
                url: '@Url.Action("ConfirmTopup", "Home")',
                contentType: 'application/x-www-form-urlencoded',
                data: { str },
                success: function (response) {
                    if (response === "Success") {
                        window.location.reload();
                    } else {
                        alert(response);
                    }
                }
            });
        });

        $('#btn_add_slip_topup').on('click', async function () {
            $('#ImportModal').modal();
        });

        $('#btn_view_slip_topup').on('click', async function () {
            let topup_id = $('#topup_money').text();
            await $.ajax({
                type: "GET",
                url: '@Url.Action("GetPathImageTopup", "Home")',
                contentType: 'application/x-www-form-urlencoded',
                data: { topup_id },
                success: function (response) {
                    if (response === "ไม่มีสลิป") {
                        alert(response);
                    } else {
                        let path = response;
                        let picture = "data:" + path;

                        if (picture === 'ไม่มีสลิป') {
                            document.getElementById('topup_view_image').src = '@Url.Content("~/images/no-image.png")';
                        } else {
                            document.getElementById('topup_view_image').src = picture;
                        }                        
                        $('#modal_view_slip_topup').modal();
                    }
                }
            });           
        });

        $('#importFile').on('change', async function (e) {
            let topup_id = $('#topup_money').text();
            b_check_add_slip = true;
            if (e.target.files[0]) {
                let fdata = new FormData();
                let fileUpload = $('#importFile').get(0);
                let files = fileUpload.files;
                fdata.append(files[0].name, files[0]);
                fdata.append("topup_id", topup_id);
                $('#importFileName').text(files[0].name);

                await $.ajax({
                    type: "POST",
                    url: "Home/Importfile",
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader("XSRF-TOKEN",
                            $('input:hidden[name="__RequestVerificationToken"]').val());
                    },
                    data: fdata,
                    contentType: false,
                    processData: false,
                    success: function (response) {
                        if (response.length == 0)
                            alert('Some error occured while uploading');
                        else {
                            alert(response);
                            $('#ImportModal').modal('hide');
                        }
                    },
                });
            }
        });

        async function GetTransaction(employee_id) {
            await $.ajax({
                type: "GET",
                url: '@Url.Action("GetTransactionByEmployee", "Home")',
                contentType: 'application/x-www-form-urlencoded',
                data: { employee_id },
                success: function (response) {
                    let transactions = response.transactions;
                    let current_balance = response.balance;
                    GenerateTableTransaction(transactions, current_balance);
                }
            });
        }

        async function GetAdminTopups() {
            await $.ajax({
                type: "GET",
                url: '@Url.Action("GetAdminStatusTopup", "Home")',
                contentType: 'application/x-www-form-urlencoded',
                data: {  },
                success: function (response) {
                    let topups = response;                   
                    GenerateTableAdminTopup(topups);                 
                }
            });
        }

        async function GetTopups(employee_id) {
            await $.ajax({
                type: "GET",
                url: '@Url.Action("GetStatusTopup", "Home")',
                contentType: 'application/x-www-form-urlencoded',
                data: {employee_id},
                success: function (response) {
                    let topups = response;                  
                    GenerateTableTopup(topups);                   
                }
            });
        }
        async function GetTransactionAddMoney(employee_id) {
            let role = '@Html.Raw(Model.role)';
            await $.ajax({
                type: "GET",
                url: '@Url.Action("GetTransactionAdd", "Home")',
                contentType: 'application/x-www-form-urlencoded',
                data: { employee_id },
                success: function (response) {
                    if (role === "Admin") {
                        GenerateTableAdminAddMoney(response);
                    } else {
                        GenerateTableAddMoney(response);
                    }
                }
            });
        }

        async function GetTransactionTransfer(employee_id) {
            await $.ajax({
                type: "GET",
                url: '@Url.Action("GetTransactionTransfer", "Home")',
                contentType: 'application/x-www-form-urlencoded',
                data: { employee_id },
                success: function (response) {
                    GenerateTableTransfer(response);
                }
            });
        }
        async function GetTransactionPay(employee_id) {
            await $.ajax({
                type: "GET",
                url: '@Url.Action("GetTransactionPay", "Home")',
                contentType: 'application/x-www-form-urlencoded',
                data: { employee_id },
                success: function (response) {
                    GenerateTablePay(response);
                }
            });
        }

        async function ApproveTopup(topup_id,name,amount){
            $('#topup_image').attr('src', null);
            await $.ajax({
                type: "GET",
                url: '@Url.Action("GetPathImageTopup", "Home")',
                contentType: 'application/x-www-form-urlencoded',
                data: { topup_id },
                success: function (response) {
                    if (response === "ไม่มีสลิป") {
                        alert(response);
                    } else {
                        let path = response;
                        let picture = "data:" + path;

                        if (picture === 'ไม่มีสลิป') {
                            document.getElementById('topup_image').src = '@Url.Content("~/images/no-image.png")';
                        } else {
                            document.getElementById('topup_image').src = picture;
                        }
                        $('#p_no_topup').text(topup_id);
                        $('#p_name_topup').text(name);
                        $('#p_amount_topup').text(amount);
                        $('#modal_topup').modal();
                    }
                }
            }); 
        };

        async function ViewTopup(topup_id) {
            await $.ajax({
                type: "GET",
                url: '@Url.Action("GetPathImageTopup", "Home")',
                contentType: 'application/x-www-form-urlencoded',
                data: { topup_id },
                success: function (response) {
                    if (response === "ไม่มีสลิป") {
                        alert(response);
                    } else {
                        let path = response;
                        let picture = "data:" + path;

                        if (picture === 'ไม่มีสลิป') {
                            document.getElementById('topup_view_image').src = '@Url.Content("~/images/no-image.png")';
                        } else {
                            document.getElementById('topup_view_image').src = picture;
                        }
                        $('#modal_view_slip_topup').modal();
                    }
                }
            });
        };

        async function AddTopup(topup_id) {
            $('#topup_money').text(topup_id);
            $('#ImportModal').modal();            
        };

        function GenerateTableAdminAddMoney(datas) {
            let _datas = [];
            for (let i = 0; i < datas.length; i++) {
                _datas.push([
                    (i + 1),
                    datas[i].date.split('T')[0] + " " + datas[i].date.split('T')[1],
                    datas[i].receiver_name,
                    "+" + datas[i].amount,
                    "",
                    ""
                ]);
            }

            if (table_add_money !== undefined) {
                table_add_money.destroy();
            }
            table_add_money = $('#table_add_money').DataTable({
                data: _datas,
                columnDefs: [
                    {
                        targets: 0,
                        className: "text-center"
                    },
                ],
                rowCallback: function (row, data) {
                    let date = data[1];
                    let name = data[2];
                    $('td:eq(3)', row).css('color', "green");
                },
                searching: true,
                paging: false,
                info: false,
                order: false,
            });
        }
        function GenerateTableAddMoney(datas) {
            let _datas = [];
            for (let i = 0; i < datas.length; i++) {
                _datas.push([
                    (i + 1),
                    datas[i].date.split('T')[0] + " " + datas[i].date.split('T')[1],
                    datas[i].receiver_name,
                    "+" + datas[i].amount,
                    ""
                ]);
            }

            if (table_add_money !== undefined) {
                table_add_money.destroy();
            }
            table_add_money = $('#table_add_money').DataTable({
                data: _datas,
                columnDefs: [
                    {
                        targets: 0,
                        className: "text-center"
                    },
                ],
                rowCallback: function (row, data) {
                    let date = data[1];
                    let name = data[2];
                    $('td:eq(3)', row).css('color', "green");
                    $('td:eq(5)', row).html(`
                                                <button class="btn btn-warning" style="width:60px;font-size:12px" onclick="ViewAddMoney('${date}','${name}')">ใบสลิป
                                                </button>
                                            `);
                },
                searching: true,
                paging: false,
                info: false,
                order: false,
            });
        }
        function GenerateTableTransaction(transactions, current_balance) {
            let datas = [];
            let sum_pay = 0;
            let sum_add = 0;
            let sum_close = 0;
            let sum_transfer = 0;
            let balance = current_balance;
            for (let i = 0; i < transactions.length; i++) {
                if (transactions[i].type === "Add") {
                    balance += transactions[i].amount;
                    datas.push([transactions[i].date.split('T')[0] + " " + transactions[i].date.split('T')[1],
                    transactions[i].employee_name,
                    "+" + transactions[i].amount,
                        "",
                        "",
                        "",
                        balance
                    ]);
                    sum_add += transactions[i].amount;
                }
                if (transactions[i].type === "Pay") {
                    balance -= transactions[i].amount;
                    datas.push([transactions[i].date.split('T')[0] + " " + transactions[i].date.split('T')[1],
                    transactions[i].employee_name,
                        "",
                    "-" + transactions[i].amount,
                        "",
                        "",
                        balance
                    ]);
                    sum_pay -= transactions[i].amount;
                }
                if (transactions[i].type === "Close") {
                    balance -= transactions[i].amount;
                    datas.push([transactions[i].date.split('T')[0] + " " + transactions[i].date.split('T')[1],
                    transactions[i].employee_name,
                        "",
                        "",
                    "-" + transactions[i].amount,
                        "",
                        balance
                    ]);
                    sum_close -= transactions[i].amount;
                }
                if (transactions[i].type === "Receive") {
                    balance += transactions[i].amount;
                    datas.push([transactions[i].date.split('T')[0] + " " + transactions[i].date.split('T')[1],
                    transactions[i].employee_name,
                        "",
                        "",
                        "",
                    "+" + transactions[i].amount,
                        balance
                    ]);
                    sum_transfer += transactions[i].amount;
                }
                if (transactions[i].type === "Transfer") {
                    balance -= transactions[i].amount;
                    datas.push([transactions[i].date.split('T')[0] + " " + transactions[i].date.split('T')[1],
                    transactions[i].employee_name,
                        "",
                        "",
                        "",
                    "-" + transactions[i].amount,
                        balance
                    ]);
                    sum_transfer -= transactions[i].amount;
                }
            }

            // Summary
            datas.push(["รวม", "", sum_add.toString(), sum_pay.toString(), sum_close.toString(), sum_transfer.toString(), balance.toString()]);


            if (table_transaction !== undefined) {
                table_transaction.destroy();
            }

            table_transaction = $('#table_transaction').DataTable({
                data: datas,
                columnDefs: [
                    {
                        targets: 0,
                        width: "20%"
                    },
                    {
                        targets: 1,
                        width: "40%",
                        className: 'dt-head-center',
                        className: "dt-body-left",
                    }
                ],
                rowCallback: function (row, data) {
                    let no = data[0];
                    let add = data[2];
                    let pay = data[3];
                    let close = data[4];
                    let transfer = data[5].substring(0, 1);
                    if (add !== "" || transfer === "+") {
                        $('td:eq(5)', row).css('color', "green");
                        $('td:eq(2)', row).css('color', "green");
                    }
                    if (pay !== "" || close !== "" || transfer === "-") {
                        $('td:eq(3)', row).css('color', "red");
                        $('td:eq(4)', row).css('color', "red");
                        $('td:eq(5)', row).css('color', "red");
                    }
                    if (no === "รวม") {
                        $('td', row).css('color', "black");
                        $('td', row).css('font-weight', "bold");
                    }

                    $('td:eq(6)', row).css('color', "#034694");
                    $('td:eq(6)', row).css('font-weight', "bold");
                },
                searching: true,
                paging: true,
                info: false,
                order: false,
            });
        }
        function GenerateTableTransfer(datas) {
            let _datas = [];
            for (let i = 0; i < datas.length; i++) {
                if (datas[i].type === "Transfer") {
                    _datas.push([
                        (i + 1),
                        datas[i].date.split('T')[0] + " " + datas[i].date.split('T')[1],
                        datas[i].employee_name,
                        datas[i].receiver_name,
                        "-" + datas[i].amount
                    ]);
                }
                if (datas[i].type === "Receive") {
                    _datas.push([
                        (i + 1),
                        datas[i].date.split('T')[0] + " " + datas[i].date.split('T')[1],
                        datas[i].receiver_name,
                        datas[i].employee_name,
                        "+" + datas[i].amount
                    ]);
                }
            }

            if (table_transfer !== undefined) {
                table_transfer.destroy();
            }
            table_transfer = $('#table_transfer').DataTable({
                data: _datas,
                columnDefs: [
                    {
                        targets: 0,
                        className: "text-center"
                    },
                ],
                rowCallback: function (row, data) {
                    let amount = data[4];
                    if (amount < 0) {
                        $('td:eq(4)', row).css('color', "red");
                    } else {
                        $('td:eq(4)', row).css('color', "green");
                    }
                },
                searching: true,
                paging: false,
                info: false,
                order: false,
            });
        }
        function GenerateTablePay(datas) {
            let _datas = [];
            for (let i = 0; i < datas.length; i++) {
                _datas.push([
                    (i + 1),
                    datas[i].date.split('T')[0] + " " + datas[i].date.split('T')[1],
                    datas[i].receiver_name,
                    "-" + datas[i].amount
                ]);
            }

            if (table_pay !== undefined) {
                table_pay.destroy();
            }
            table_pay = $('#table_pay').DataTable({
                data: _datas,
                columnDefs: [
                    {
                        targets: 0,
                        className: "text-center"
                    },
                ],
                rowCallback: function (row, data) {
                    $('td:eq(3)', row).css('color', "red");
                },
                searching: true,
                paging: false,
                info: false,
                order: false,
            });
        }
        function GenerateTableAdminTopup(datas) {
            let _datas = [];
            for (let i = 0; i < datas.length; i++) {
                _datas.push([
                    datas[i].topup_id,
                    datas[i].date.split('T')[0] + " " + datas[i].date.split('T')[1],
                    datas[i].employee_name,
                    datas[i].amount,                    
                    datas[i].note,                
                    datas[i].status,
                    ""
                ]);
            }

            if (table_topup !== undefined) {
                table_topup.destroy();
            }
            table_topup = $('#table_topup').DataTable({
                data: _datas,
                columnDefs: [
                    {
                        targets: 0,
                        className: "text-center"
                    },
                ],
                rowCallback: function (row, data) {
                    let topup_id = data[0];
                    let name = data[2];
                    let amount = data[3];
                    let status = data[5];

                    $('td:eq(5)', row).html(`
                                    <button class="btn btn-success" style="width:60px;font-size:8px" onclick="ApproveTopup('${topup_id}','${name}','${amount}')">${status}
                            </button>
                    `);
                    $('td:eq(6)', row).html(`
                                    <button class="btn btn-warning" style="width:60px;font-size:8px" onclick="ViewTopup('${topup_id}')">ดูสลิป
                            </button>
                    `);
                },
                searching: true,
                paging: false,
                info: false,
                order: false,
            });
        }
        function GenerateTableTopup(datas) {
            let _datas = [];
            for (let i = 0; i < datas.length; i++) {
                _datas.push([
                    datas[i].topup_id,
                    datas[i].date.split('T')[0] + " " + datas[i].date.split('T')[1],
                    datas[i].employee_name,
                    datas[i].amount,
                    datas[i].note,
                    datas[i].status,
                    "",
                    ""
                ]);
            }

            if (table_topup !== undefined) {
                table_topup.destroy();
            }
            table_topup = $('#table_topup').DataTable({
                data: _datas,
                columnDefs: [
                    {
                        targets: 0,
                        className: "text-center"
                    },
                ],
                rowCallback: function (row, data) {
                    let topup_id = data[0];
                    let status = data[5];
                    if (status === "Pending") { 
                        $('td:eq(6)', row).html(`
                                                <button class="btn btn-success" style="width:60px;font-size:8px" onclick="AddTopup('${topup_id}')">เพิ่มสลิป
                                        </button>
                                `);
                    }
                    if (status === "Approve") {
                        $('td:eq(5)', row).css('color', "green");
                    }
                    if (status === "Cancel") {
                        $('td:eq(5)', row).css('color', "red");
                    }
                    $('td:eq(7)', row).html(`
                                            <button class="btn btn-warning" style="width:60px;font-size:8px" onclick="ViewTopup('${topup_id}')">ดูสลิป
                                    </button>
                            `);
                },
                searching: true,
                paging: false,
                info: false,
                order: false,
            });
        }
    </script>
}