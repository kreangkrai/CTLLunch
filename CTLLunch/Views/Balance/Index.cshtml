@model CTLLunch.Models.EmployeeModel;
@{
    ViewData["Title"] = "Balance";
}

<link rel="preconnect" href="https://fonts.gstatic.com">
<link href="https://fonts.googleapis.com/css2?family=Mitr:wght@300&display=swap" rel="stylesheet">

<style type="text/css">
    body {
        font-family: 'Mitr', sans-serif;
    }
</style>

<div class="container-fluid">   
    <div class="row d-flex justify-content-center p-1" style="row-gap:1px">
        <div class="col-xl-4">
            <div class="card card-dark" style="height:800px">
                <div class="card-header" style="background-color: #034694">
                    <span class="card-title">ยอดเงินคงเหลือ</span>
                </div>
                <div class="card-body" style="overflow-x:auto;overflow-y:auto">
                    <div class="row">
                        <div class="col-xl-12">
                            <table id="table_employee" class="table table-sm table-hover text-center w-100">
                                <thead style="text-align:center; background-color: #F2F2F2;color:black;border-color:greenyellow;border-width:2px;border:solid">
                                    <tr>
                                        <th>ลำดับ</th>
                                        <th>ชื่อ</th>
                                        <th>ยอดเงินคงเหลือ</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                    <hr />
                    <div class="row">
                        <div class="col-xl-12">
                            <div class="card card-dark">
                                <div class="card-header" style="background-color: #034694">
                                    <span class="card-title">ปิดบัญชี</span>
                                </div>
                                <div class="card-body" style="overflow-x:auto">
                                    <div class="form-row pt-1">
                                        <div class="col-4 col-md-3 col-xl-3">
                                            <label>ชื่อ : </label>
                                        </div>
                                        <div class="col-8 col-md-8 col-xl-8">
                                            <select id="select_employees" class="form-control"></select>
                                        </div>
                                    </div>
                                    <div class="form-row pt-1">
                                        <div class="col-4 col-md-3 col-xl-3">
                                            <label>เงินคงเหลือ : </label>
                                        </div>
                                        <div class="col-8 col-md-8 col-xl-8">
                                            <div class="input-group">
                                                <input id="employee_balance" type="number" class="form-control" value="0" disabled/>
                                                <div class="input-group-append">
                                                    <span class="input-group-text">บาท</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-row pt-3">
                                        <div class="col-12 col-md-12 col-xl-12">
                                            <div class="form-group row d-flex justify-content-center" style="row-gap:3px">
                                                <input type="button" id="btn_balance" class="btn btn-danger" value="ทำรายการ" style="border-radius:25px;width:200px;height:50px;font-size:20px" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-8">
            <div class="card card-dark" style="height:800px">
                <div class="card-header" style="background-color: #034694">
                    <span class="card-title">ธุรกรรม</span>
                </div>
                <div class="card-body" style="overflow-x:auto">
                    <div class="row">
                        <div class="col-4 col-md-2 col-xl-2">
                            <label >เดือน : </label>
                        </div>
                        <div class="col-8 col-md-4 col-xl-4">
                            <input id="transaction_month" type="month" class="form-control" />
                        </div>                       
                    </div>
                    <div class="row pt-1">
                        <div class="col-12 col-md-12 col-xl-12">
                            <table id="table_transaction" class="table table-sm table-hover text-center w-100">
                                <thead style="text-align:center; background-color: #F2F2F2;color:black;border-color:greenyellow;border-width:2px;border:solid">
                                    <tr>
                                        <th>วันที่</th>
                                        <th>ชื่อ</th>                              
                                        <th>เติม</th>
                                        <th>จ่าย</th>
                                        <th>ถอน</th>
                                        <th>โอน</th>
                                        <th>คงเหลือ</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="modal_confirm_close" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog modal-dialog-centered modal-md" role="document">
        <div class="modal-content">
            <div class="modal-body">
                <form>
                    <p style="font-size:20px">คุณต้องการทำรายการนี้หรือไม่ ?</p>
                </form>
            </div>
            <div class="modal-footer">
                <input type="button" class="btn btn-secondary" data-dismiss="modal" value="ยกเลิก" />
                <input id="btn_confirm_close" type="button" class="btn btn-danger" value="ทำรายการ" />
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script type="text/javascript">
        var table_employee;
        var table_transaction;
        let balances = [];
        $(document).ready(async function () {

            const dateObj = new Date();
            const month = dateObj.getUTCMonth() + 1;
            const day = dateObj.getUTCDate();
            const year = dateObj.getUTCFullYear();

            const _month = year + "-" + month;
            $('#transaction_month').val(_month);
            await GetBalances();
            await GetTransaction(_month);
        });

        $('#transaction_month').on('change', async function () {
            let month = $('#transaction_month').val();
            GetTransaction(month);
        });

        $('#btn_balance').on('click', function () {
            $('#modal_confirm_close').modal();
        });

        $('#btn_confirm_close').on('click', async function () {
            let employee_id = $('#select_employees').val();
            let amount = $('#employee_balance').val();

            if (employee_id !== null && employee_id !== "") {
                await $.ajax({
                    type: "POST",
                    url: '@Url.Action("WithdrawBalances", "Balance")',
                    contentType: 'application/x-www-form-urlencoded',
                    data: { employee_id, amount },
                    success: function (response) {
                        if (response === "Success") {
                            window.location.reload();
                        } else {
                            alert(response);
                        }
                    }
                });
            } else {
                alert('Error');
            }
        });
        
        async function GetBalances() {
            await $.ajax({
                type: "GET",
                url: '@Url.Action("GetBalances", "Balance")',
                contentType: 'application/x-www-form-urlencoded',
                data: {  },
                success: function (response) {
                    balances = response;
                    GenerateTableBalance(balances);

                    balances = balances.filter(f => f.employee_id !== "EM999").map(m => m);
                    SelectBalance(balances);
                }
            });
        }
        async function GetTransaction(month) {
            await $.ajax({
                type: "GET",
                url: '@Url.Action("GetTransaction", "Balance")',
                contentType: 'application/x-www-form-urlencoded',
                data: {month},
                success: function (response) {
                    let transactions = response.transactions;
                    let current_balance = response.balance;
                    GenerateTableTransaction(transactions, current_balance);
                }
            });
        }

        function SelectBalance(balances) {
            var str = '<option value="" selected disabled>Please Select</option>';
            for (var i = 0; i < balances.length; i++) {
                str += `<option value=${balances[i].employee_id}>${balances[i].employee_name}</option>`;               
            }
            $('#select_employees').empty();
            $('#select_employees').append(str);
        }
        function GenerateTableBalance(balances) {
            let datas = [];
            let sum_balance = 0.0;
            for (let i = 0; i < balances.length; i++) {
                sum_balance += parseFloat(balances[i].balance);
                datas.push([(i + 1),
                    balances[i].employee_name,
                    balances[i].balance
                ]);
            }

            // Summary
            datas.push(["รวม", "", sum_balance]);


            if (table_employee !== undefined) {
                table_employee.destroy();
            }

            table_employee = $('#table_employee').DataTable({
                data: datas,
                columnDefs: [
                    {
                        targets: 0,
                        width: "3%"
                    },
                    {
                        targets: 1,
                        width: "40%",                        
                        className: 'dt-head-center',
                        className: "dt-body-left",
                    },
                    {
                        targets: 2,
                        width: "25%",
                        className: "text-center"
                    },
                ],
                rowCallback: function (row, data) {
                    let no = data[0];
                    if (no === "รวม") {
                        $('td', row).css('font-weight', "bold");
                    }                    
                },
                searching: false,
                paging: false,
                info: false,
                order:false,
            });
        }

        function GenerateTableTransaction(transactions, current_balance) {
            let datas = [];
            let sum_pay = 0;
            let sum_add = 0;
            let sum_close = 0;
            let sum_transfer = 0
            let sum_receive_transfer = 0;
            let balance = current_balance;
            for (let i = 0; i < transactions.length; i++) {                
                if (transactions[i].type === "Add") {
                    balance += transactions[i].amount;
                    datas.push([transactions[i].date.split('T')[0] + " " + transactions[i].date.split('T')[1],
                    transactions[i].employee_name,
                    "+" + transactions[i].amount,
                        "",
                        "",
                        "",
                        balance
                    ]);
                    sum_add += transactions[i].amount;
                }
                if (transactions[i].type === "Receive") {
                    balance += transactions[i].amount;
                    datas.push([transactions[i].date.split('T')[0] + " " + transactions[i].date.split('T')[1],
                    transactions[i].employee_name,                    
                        "",
                        "",
                        "",
                        "+" + transactions[i].amount,
                        balance
                    ]);
                    sum_receive_transfer += transactions[i].amount;
                }
                if (transactions[i].type === "Pay") {
                    balance -= transactions[i].amount;
                    datas.push([transactions[i].date.split('T')[0] + " " + transactions[i].date.split('T')[1],
                    transactions[i].employee_name,
                        "",
                        "-" + transactions[i].amount,
                        "",
                        "",
                        balance
                    ]);
                    sum_pay -= transactions[i].amount;
                }
                if (transactions[i].type === "Close") {
                    balance -= transactions[i].amount;
                    datas.push([transactions[i].date.split('T')[0] + " " + transactions[i].date.split('T')[1],
                    transactions[i].employee_name,
                        "",
                        "",
                        "-" + transactions[i].amount,
                        "",
                        balance
                    ]);
                    sum_close -= transactions[i].amount;
                }
                if (transactions[i].type === "Transfer") {
                    balance -= transactions[i].amount;
                    datas.push([transactions[i].date.split('T')[0] + " " + transactions[i].date.split('T')[1],
                    transactions[i].employee_name,
                        "",
                        "",
                        "",
                        "-" + transactions[i].amount,
                        balance
                    ]);
                    sum_transfer -= transactions[i].amount;
                }
            }

            // Summary
            datas.push(["รวม", "", sum_add.toString(), sum_pay.toString(), sum_close.toString(), "-", balance.toString()]);


            if (table_transaction !== undefined) {
                table_transaction.destroy();
            }

            table_transaction = $('#table_transaction').DataTable({
                data: datas,
                columnDefs: [
                    {
                        targets: 0,
                        width: "20%"
                    },
                    {
                        targets: 1,
                        width: "40%",
                        className: 'dt-head-center',
                        className: "dt-body-left",
                    }
                ],
                rowCallback: function (row, data) {
                    let no = data[0];
                    let add = data[2];
                    let pay = data[3];
                    let close = data[4];
                    let transfer = data[5].substring(0,1);
                    if (add !== "" || transfer === "+") {
                        $('td:eq(5)', row).css('color', "green");
                        $('td:eq(2)', row).css('color', "green");
                    }
                    if (pay !== "" || close !== "" || transfer === "-") {
                        $('td:eq(3)', row).css('color', "red");
                        $('td:eq(4)', row).css('color', "red");
                        $('td:eq(5)', row).css('color', "red");
                    }
                    if (no === "รวม") {
                        $('td', row).css('color', "black");
                        $('td', row).css('font-weight', "bold");
                    }

                    $('td:eq(6)', row).css('color', "#034694");
                    $('td:eq(6)', row).css('font-weight', "bold");
                },
                searching: true,
                paging: false,
                info: false
            });
        }

        $('#select_employees').on('change', function () {
            let employee_id = $('#select_employees').val();
            let balance = balances.filter(f => f.employee_id === employee_id).map(m => m.balance)[0];
            $('#employee_balance').val(balance);
        });
    </script>
}